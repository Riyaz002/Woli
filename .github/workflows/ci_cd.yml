name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: create secret file
      run : |
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> secrets.properties
          echo "KEY_STORE_ALIAS=${{ secrets.KEY_STORE_ALIAS }}" >> secrets.properties
          echo "KEY_STORE_PASSWORD=${{ secrets.KEY_STORE_PASSWORD }}" >> secrets.properties
          echo "PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}" >> secrets.properties
          echo "SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "PEXELS_BASE_URL=${{ secrets.PEXELS_BASE_URL }}" >> secrets.properties
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: set up JDK 17
        uses: actions/setup-java@v4
        
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: create secret file
        run : |
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> secrets.properties
          echo "KEY_STORE_ALIAS=${{ secrets.KEY_STORE_ALIAS }}" >> secrets.properties
          echo "KEY_STORE_PASSWORD=${{ secrets.KEY_STORE_PASSWORD }}" >> secrets.properties
          echo "PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}" >> secrets.properties
          echo "SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "PEXELS_BASE_URL=${{ secrets.PEXELS_BASE_URL }}" >> secrets.properties
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Run tests
        run: ./gradlew test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps: 
      - uses: actions/checkout@v4
      
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Create jks file
        run : echo ${{ secrets.KEYSTORE_JKS_FILE_CONTENT }} >> encoded.txt && base64 -d encoded.txt > app/woli_keystore.jks

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: create secret file
        run : |
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> secrets.properties
          echo "KEY_STORE_ALIAS=${{ secrets.KEY_STORE_ALIAS }}" >> secrets.properties
          echo "KEY_STORE_PASSWORD=${{ secrets.KEY_STORE_PASSWORD }}" >> secrets.properties
          echo "PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}" >> secrets.properties
          echo "SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "PEXELS_BASE_URL=${{ secrets.PEXELS_BASE_URL }}" >> secrets.properties
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build Release AAB
        run: ./gradlew app:bundleRelease

      - name: Add service account json
        run: |
          echo ${{ secrets.SERVICE_ACCOUNT_JSON }} >> service_account_encoded.txt
          base64 -d service_account_en.txt > service_account.json
          echo "SERVICE_ACCOUNT_JSON_TEXT=$(echo service_account.json)" >> $GITHUB_ENV      

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ env.SERVICE_ACCOUNT_JSON_TEXT }}
          packageName: com.wiseowl.woli
          releaseFiles: app/build/outputs/bundle/release/*.aab
          track: internal
